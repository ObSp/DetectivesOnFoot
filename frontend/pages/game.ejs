<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game - Detectives On Foot</title>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/frontend/css/game.css">
</head>
<body>

    <img alt="">

    <div id="waiting-players">
        <h2>Players: </h2>
        <ul id="player-list">
            
        </ul>
        <button type="button" id="start-button">Start Game</button>
        <p id="game-code-display">Game Code: </p>
    </div>

    <h1 hidden id="popup">Your role: detective.</h1>
    
    <script>
        const socket = io("http://localhost:5000")
        const get = (id) => document.getElementById(id)
        const name = new URLSearchParams(new URL(window.location.href).search).get("name")

        socket.on("connect", () => {
            document.cookie = "last_connected_socket_id=" + socket.id
        });

        socket.on("game_joined", (game) => {
            if (!game.started) {
                get("waiting-players").hidden = false
                get("game-code-display").innerText = `Game Code: ${game.id}`
                get("popup").hidden = true
            } else {
                console.log(game.players)
                get("waiting-players").hidden = true
                get("popup").innerHTML = "Your role: "+ game.players.find(player => player.name == name).role;
                get("popup").hidden = false
            }
        })

        socket.on("invalid_game_id", () => {
            get("popup").innerText = "Invalid game code."
            get("popup").hidden = false
            get("waiting-players").hidden = true
        })

        socket.on("join_declined_game_started", () => {
            get("popup").innerText = "Unable to join a game that has already started."
            get("popup").hidden = false
            get("waiting-players").hidden = true
        })

        socket.on("player_update", (players) => {
            get("player-list").innerHTML = ""
            let isHost = false
            for (const player of players) {
                const li = document.createElement("li")
                li.innerText = player.name + (player.isHost ? " (Host)" : "")
                get("player-list").appendChild(li)

                if (player.name == name) {
                    isHost = player.isHost
                }
            }

            if (!isHost) {
                get("waiting-players").removeChild(get("start-button"))
            }
        })

        socket.on("game_started", (role) => {
            console.log("start")
            get("waiting-players").hidden = true
            get("popup").innerText = "Your role: "+role
            get("popup").hidden = false
        })

        get("start-button").addEventListener("click", () => {
            get("waiting-players").removeChild(get("start-button"))
            socket.emit("start_game")
        })

    </script>

</body>
</html>